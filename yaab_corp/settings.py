"""
Django settings for yaab_corp project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import dj_database_url
from pathlib import Path
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Define BASE_URL, apenas lo agregue
BASE_URL = 'http://localhost:8000' 


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-buxj*46ayh)mdhbmw-*hfn3#hlk4^10x4%qxc$y%h15v=z_-5v'
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = os.environ.get("DEBUG","False").lower() == "true"

#ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'applications',
    'applications.users',
    'applications.dashboard',
    'applications.landing',
    # 'applications.users.apps.UsersConfig',
    'inflect',
    # 'autocomplete_light',

    # CONFIRMACION DE CORREO
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    "crispy_forms",
    "crispy_bootstrap5",
    'allauth.socialaccount.providers.google',
    'django.contrib.humanize',
    
    # 'autocomplete_light',
]

# proveedor de control de validacion social account
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,

    }
}

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

SITE_ID = 1


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    # 'autocomplete_light.middleware.AutocompleteMiddleware',
]

ROOT_URLCONF = 'yaab_corp.urls'


# [BASE_DIR / 'templates']
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# seccion de confirmacion de correo
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'yaab_corp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'web_course',
        'USER': 'postgres',
        'PASSWORD': 'elote2018',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'course_web',
#         'USER': 'course_web_user',
#         'PASSWORD': 'RFoOJQ30IKur9y8256t1ozElErVwMfKj',
#         'HOST': 'dpg-cqtom952ng1s739dnn5g-a',
#         'PORT': '5432',
#         'OPTIONS': {
#             'sslmode': 'require',
#         },
#     }
# }
database_url = os.environ.get("DATABASE_URL")
DATABASES["default"] = dj_database_url.parse(database_url)
#DATABASES["default"] = dj_database_url.parse("postgresql://web_course_user:jOSEaToDrCOUZQPAP78bW3GzJnhVrNAf@dpg-cqtq5d5ds78s739rojvg-a.oregon-postgres.render.com/web_course")




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-Mx'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True


### tokens mifiel ###

# MIFIEL_API_TOKEN = 'd4d0e2c16a5b0abe5eaa5be9c76a194ec80bd05d'
# MIFIEL_API_TOKEN_SECRET = 'tVtzBrmUt5vvDasyoo5u9GwYRVoc+Xdv4LJX1MA7HD9tq0A0XNUINWLrLQujfzGOhg0D3Xs8x4GRyu5jarsulQ=='

# MIFIEL_API_TOKEN = '4636a73ec8fc4821bdbdbcb072144c230c197e4d'
# MIFIEL_API_TOKEN_SECRET = 'ZCP0pdJjPI+k7qr7dUVjUpRl+MdlFoMCHjDLJpnmRqowG8taACiYoPwYfqQR3xauMajtsKS1tqzfafOyN/fQ4w=='

MIFIEL_API_TOKEN = 'ef9ce8d12c2fb592280890d80d00478286b8578f'
MIFIEL_API_TOKEN_SECRET = 'ZfwV0OkrfJU4tJzTwk4nx8ClOespbd3e+we0L/0FriDeoQsRvrxzJKpSQhV25hzCWBtlgwg1fuS78UI2QNic6w=='

### tokens mifiel ###

### login logout ###

### api market #####
API_MARKET = 'd4abb28b-85b9-42fc-995d-e77d2bd798d4'
### api market #####

### login logout ###


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# [BASE_DIR / "static"]


MEDIA_URL = "/media/"  # URL para servir los archivos de medios
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_ROOT = BASE_DIR / 'media'  # Ruta absoluta a la carpeta de medios

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'users.User'


# Configuraciones adicionales de django allauth
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    EMAIL_HOST_USER = 'yaab2023tech@gmail.com'
    EMAIL_HOST_PASSWORD = 'vgit jdxe pgaj ufqy'
    # EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
# else:
    # EMAIL_BACKEND = [ mi configuracion de correo]

ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True

LOGIN_REDIRECT_URL = reverse_lazy('dashboard_app:index')
LOGOUT_REDIRECT_URL = 'account_login'

ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 7
ACCOUNT_LOGOUT_ON_GET = False

# Configuraciones adicionales de django allauth
